#!/bin/bash
problem=$(echo $1 | tr '[:lower:]' '[:upper:]')
numFiles=$(shopt -s nullglob; files=($(pwd)/$problem/*.in); echo ${#files[@]};)

RED='\033[0;31m'
GREEN='\033[0;032m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'
UNDERLINE='\e[4m'

if [[ $numFiles -eq 0 ]]; then
	echo "No input files."
	exit
fi

function check_error() {
    if [ $? -ne 0 ]; then
        echo -e "$(basename $0): $1"
        exit -1
    fi
}


fla=0
g++ -std=c++17 -Wall -fsanitize=undefined -O2 $(pwd)/$problem/main.cpp || fla=1
if [ $fla -eq 1 ]
then
	echo -e "\n\033[1;31m : Compilation Error\e[0m"
	exit
fi

tempOutputFile=temp.txt
correct=0
for ((i = 1 ; i <= $numFiles ; i++)); do
	inputTextFile=$(pwd)/$problem/$i.in
	outputTextFile=$(pwd)/$problem/$i.out
	true > $tempOutputFile
	./a.out < $inputTextFile > $tempOutputFile
	check_error "Failure occurred while running output file!"

	# Checking diff between the files
	diffOutput=$(diff $outputTextFile $tempOutputFile)
	diffLines=$(echo "$diffOutput" | wc -l)
	if [ $diffLines -gt 1 ]; then
		echo -e "${RED}\u2718 Failed sample $i!${NC}"
		echo -e "--------------------\n>> Input:"
		cat $inputTextFile
		echo -e "--------------------\n>> Output:"
		cat $tempOutputFile
		echo -e "--------------------\n>> Expected:"
		cat $outputTextFile
		echo -e "--------------------\n"
	else
		echo -e "${GREEN}\u2713 Passed sample $i!${NC}"
		correct=`expr $correct + 1`
	fi
done

color=
icon=
if [[ $correct -eq $numFiles ]]; then
	color=$GREEN
	icon="\u2713"
else
	color=$RED
	icon="\u2718"
fi
echo -e "\n\n${color}${icon} Passed [$correct/$numFiles] tests${NC}"
